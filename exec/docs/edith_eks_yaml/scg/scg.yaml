apiVersion: apps/v1
kind: Deployment
metadata:
  name: scg-spring-boot-app
  labels:
    app: scg-spring-boot-app
spec:
  replicas: 2
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: scg-spring-boot-app
  template:
    metadata:
      labels:
        app: scg-spring-boot-app
    spec:
      containers:
      - name: scg-spring-boot-app
        image: 354918381360.dkr.ecr.ap-northeast-2.amazonaws.com/ssafy/edith:scg-spring-boot-app-169
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
        readinessProbe:
          httpGet:
            port: 8080
            path: /actuator/health
          initialDelaySeconds: 15
          periodSeconds: 30
        livenessProbe:
          httpGet:
            port: 8080
            path: /actuator/health
          initialDelaySeconds: 15
          periodSeconds: 30          
        lifecycle:
          preStop:
            exec:
              command: ["/bin/sh", "-c", "sleep 2"]     
        env:
          - name: SPRING_JWT_SECRET
            valueFrom:
              secretKeyRef:
                name: jwt-secret
                key: SPRING_JWT_SECRET   

---

apiVersion: v1
kind: Service
metadata:
  name: scg-spring-boot-service
  namespace: eks-work
  labels:
    app: scg-spring-boot-app
spec:
  type: NodePort
  ports:
  - name: http
    protocol: TCP
    port: 8180        # 클러스터 내부에서 사용하는 서비스 포트
    targetPort: 8080  # Pod의 컨테이너 포트
    nodePort: 32080   # 외부에서 노드의 IP와 함께 접근할 때 사용할 고정 포트 번호
  selector:
    app: scg-spring-boot-app
